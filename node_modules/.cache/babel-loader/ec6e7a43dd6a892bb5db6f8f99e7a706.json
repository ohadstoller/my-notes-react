{"ast":null,"code":"var _jsxFileName = \"/Users/ohadstoller/my-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(10);\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  }; // Do not define components inside another component\n\n\n  const Display = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 32\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue(1000),\n      text: \"thousand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue(0),\n      text: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue(value + 1),\n      text: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"7UAQAh2ykPDdHAB4TCqEq4Uj1Jg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/ohadstoller/my-notes/src/App.js"],"names":["React","useState","Button","props","handleClick","text","App","value","setValue","setToValue","newValue","Display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACX;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMH,M;;AAMN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,UAAU,GAAGC,QAAQ,IAAI;AAC3BF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,GAFD,CAHc,CAOd;;;AACA,QAAMC,OAAO,GAAIR,KAAD,iBAAW;AAAA,cAAMA,KAAK,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,UAA3B;;AAEA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAME,UAAU,CAAC,IAAD,CAArC;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMA,UAAU,CAAC,CAAD,CAArC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMA,UAAU,CAACF,KAAK,GAAG,CAAT,CAArC;AAAkD,MAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;GAAMD,G;;MAAAA,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst Button = (props) => (\n    <button onClick={props.handleClick}>\n        {props.text}\n    </button>\n)\n\nconst App = () => {\n    const [value, setValue] = useState(10)\n\n    const setToValue = newValue => {\n        setValue(newValue)\n    }\n\n    // Do not define components inside another component\n    const Display = (props) => <div>{props.value}</div>\n\n    return (\n        <div>\n            <Display value={value}/>\n            <Button handleClick={() => setToValue(1000)} text=\"thousand\"/>\n            <Button handleClick={() => setToValue(0)} text=\"reset\"/>\n            <Button handleClick={() => setToValue(value + 1)} text=\"increment\"/>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}